"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const game_1 = require("@virtuals-protocol/game");
const discordPlugin_1 = __importDefault(require("./discordPlugin"));
// Create a worker with the functions
const discordPlugin = new discordPlugin_1.default({
    credentials: {
        botToken: "<BOT TOKEN>"
    },
});
const agent = new game_1.GameAgent("<API_KEY>", {
    name: "Discord Bot",
    goal: "A bot that will auto reply messages",
    description: "This agent will auto reply to messages, add reactions, pin messages, and delete messages",
    workers: [
        discordPlugin.getWorker({
            // Define the functions that the worker can perform, by default it will use the all functions defined in the plugin
            functions: [
                discordPlugin.sendMessageFunction,
                discordPlugin.addReactionFunction,
                discordPlugin.pinMessageFunction,
                discordPlugin.deleteMessageFunction,
            ],
        }),
    ],
});
(() => __awaiter(void 0, void 0, void 0, function* () {
    agent.setLogger((agent, message) => {
        console.log(`-----[${agent.name}]-----`);
        console.log(message);
        console.log("\n");
    });
    yield agent.init();
    discordPlugin.onMessage((msg) => __awaiter(void 0, void 0, void 0, function* () {
        if (msg.guild) {
            console.log(msg);
            console.log(`Guild Name: ${msg.guild.name}, Guild ID: ${msg.guild.id}`);
        }
        else {
            console.log('This message is not from a guild (e.g., DM).');
        }
        if (msg.author.bot) {
            console.log('This message is from a bot.');
            return;
        }
        const agentTgWorker = agent.getWorkerById(discordPlugin.getWorker().id);
        const task = "Reply to chat id: " + msg.channelId + " and the incoming is message: " + msg.content + " and the message id is: " + msg.id;
        yield agentTgWorker.runTask(task, {
            verbose: true, // Optional: Set to true to log each step
        });
    }));
}))();
