import { AwTool, LitNetwork, type PkpInfo, RegisteredToolsResult } from '@lit-protocol/agent-wallet';
import { Admin } from '../admin';
/**
 * Prompts the user to select a tool to permit, filtering out already permitted tools.
 * This function retrieves the list of available tools for the specified Lit network,
 * filters out tools that are already permitted, and prompts the user to select a tool.
 *
 * @param litNetwork - The Lit network for which to retrieve available tools.
 * @param alreadyPermittedTools - An object containing tools that are already permitted.
 * @returns The selected tool to permit.
 * @throws AwCliError - If no unpermitted tools are found or the user cancels the selection.
 */
export declare const promptSelectToolToPermit: (litNetwork: LitNetwork, alreadyPermittedTools: RegisteredToolsResult | null) => Promise<AwTool<any, any>>;
export declare const handlePermitTool: (admin: Admin, pkp: PkpInfo) => Promise<void>;
//# sourceMappingURL=permit-tool.d.ts.map