"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleDelegateeSettingsMenu = exports.DelegateeSettingsMenuChoice = void 0;
const tslib_1 = require("tslib");
const prompts_1 = tslib_1.__importDefault(require("prompts"));
const core_1 = require("../../../core");
var DelegateeSettingsMenuChoice;
(function (DelegateeSettingsMenuChoice) {
    DelegateeSettingsMenuChoice["ConfigureSigner"] = "configureSigner";
    DelegateeSettingsMenuChoice["Back"] = "back";
})(DelegateeSettingsMenuChoice || (exports.DelegateeSettingsMenuChoice = DelegateeSettingsMenuChoice = {}));
const promptDelegateeSettingsMenu = async () => {
    const { action } = await (0, prompts_1.default)({
        type: 'select',
        name: 'action',
        message: 'What would you like to do?',
        choices: [
            {
                title: 'Configure Signer',
                value: DelegateeSettingsMenuChoice.ConfigureSigner,
            },
            { title: 'Back', value: DelegateeSettingsMenuChoice.Back },
        ],
    });
    if (!action) {
        throw new core_1.LawCliError(core_1.GeneralErrors.NO_ACTION_SELECTED, 'No admin menu action selected. Please select an action to continue.');
    }
    return action;
};
const handleDelegateeSettingsMenu = async () => {
    try {
        return promptDelegateeSettingsMenu();
    }
    catch (error) {
        if (error instanceof core_1.LawCliError) {
            if (error.type === core_1.GeneralErrors.NO_ACTION_SELECTED) {
                core_1.logger.error(error.message);
                return await (0, exports.handleDelegateeSettingsMenu)();
            }
        }
        throw error;
    }
};
exports.handleDelegateeSettingsMenu = handleDelegateeSettingsMenu;
