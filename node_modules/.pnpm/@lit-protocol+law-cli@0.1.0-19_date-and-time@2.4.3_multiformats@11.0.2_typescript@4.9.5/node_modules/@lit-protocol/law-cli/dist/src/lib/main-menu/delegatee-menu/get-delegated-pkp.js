"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleGetDelegatedPkps = void 0;
const core_1 = require("../../core");
/**
 * Retrieves and displays the list of PKPs (Programmable Key Pairs) delegated to the user.
 * This function logs the progress of the operation and handles cases where no PKPs are delegated.
 *
 * @param delegatee - An instance of the Delegatee class.
 */
const handleGetDelegatedPkps = async (delegatee) => {
    // Log a loading message to indicate the operation is in progress.
    core_1.logger.loading('Getting delegated Agent Wallets...');
    // Retrieve the list of PKPs delegated to the user.
    const pkps = await delegatee.awDelegatee.getDelegatedPkps();
    // If no PKPs are delegated, log an error message and exit.
    if (pkps.length === 0) {
        core_1.logger.error('No Agent Wallets are currently delegated to you.');
        return;
    }
    // Log the list of delegated PKPs.
    core_1.logger.info('Agent Wallets Delegated to You:');
    pkps.forEach((pkp, i) => {
        core_1.logger.log(`  ${i + 1}. Ethereum Address: ${pkp.ethAddress}`);
        core_1.logger.log(`    - Public Key: ${pkp.publicKey}`);
        core_1.logger.log(`    - Token ID: ${pkp.tokenId}`);
    });
};
exports.handleGetDelegatedPkps = handleGetDelegatedPkps;
