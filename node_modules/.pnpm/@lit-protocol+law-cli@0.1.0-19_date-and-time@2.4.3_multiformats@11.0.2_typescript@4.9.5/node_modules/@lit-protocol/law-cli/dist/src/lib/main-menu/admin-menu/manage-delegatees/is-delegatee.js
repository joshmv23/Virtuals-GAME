"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleIsDelegatee = void 0;
const tslib_1 = require("tslib");
const prompts_1 = tslib_1.__importDefault(require("prompts"));
const core_1 = require("../../../core");
const promptDelegateeAddress = async () => {
    const { address } = await (0, prompts_1.default)({
        type: 'text',
        name: 'address',
        message: 'Enter the delegatee address to check:',
        validate: (value) => {
            const isValidAddress = /^0x[a-fA-F0-9]{40}$/.test(value);
            return isValidAddress || 'Please enter a valid Ethereum address';
        },
    });
    if (!address) {
        throw new core_1.LawCliError(core_1.IsDelegateeErrors.IS_DELEGATEE_CANCELLED, 'Delegatee check cancelled.');
    }
    return address;
};
const handleIsDelegatee = async (admin, pkp) => {
    try {
        const address = await promptDelegateeAddress();
        const isDelegatee = await admin.awAdmin.isDelegatee(pkp.info.tokenId, address);
        if (isDelegatee) {
            core_1.logger.success(`${address} is a delegatee.`);
        }
        else {
            core_1.logger.error(`${address} is not a delegatee.`);
        }
    }
    catch (error) {
        if (error instanceof core_1.LawCliError) {
            if (error.type === core_1.IsDelegateeErrors.IS_DELEGATEE_CANCELLED) {
                core_1.logger.error(error.message);
                return;
            }
        }
        throw error;
    }
};
exports.handleIsDelegatee = handleIsDelegatee;
