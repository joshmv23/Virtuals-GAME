import { Delegatee as AwDelegatee, LitNetwork, type IntentMatcher } from '@lit-protocol/agent-wallet';
export declare class Delegatee {
    awDelegatee: AwDelegatee;
    intentMatcher: IntentMatcher | null;
    /**
     * Private constructor for the Delegatee class.
     * @param awDelegatee - An instance of the `AwDelegatee` class.
     */
    private constructor();
    /**
     * Creates an instance of the `AwDelegatee` class.
     * Handles errors related to missing private keys or insufficient balances by prompting the user for input.
     *
     * @param litNetwork - The Lit network to use for the Delegatee role.
     * @param privateKey - Optional. The private key for the Delegatee role.
     * @returns A promise that resolves to an instance of the `AwDelegatee` class.
     * @throws If initialization fails, the function logs an error and exits the process.
     */
    private static createAwDelegatee;
    static create(litNetwork: LitNetwork, privateKey: string, intentMatcher?: IntentMatcher): Promise<Delegatee>;
    setIntentMatcher(intentMatcher: IntentMatcher): void;
    disconnect(): void;
}
//# sourceMappingURL=delegatee.d.ts.map