import { type AwTool, type SupportedLitNetwork } from '@lit-protocol/aw-tool';
/**
 * Parameters required for the JupiterSwap Lit Action.
 * @property {string} pkpEthAddress - The Ethereum address of the PKP.
 * @property {string} tokenIn - The Solana contract address of the SPL token you want to send. Must be a valid SPL address.
 * @property {string} tokenOut - The Solana contract address of the SPL token you want to receive. Must be a valid SPL address.
 * @property {string} amountIn - The amount of tokens to send, specified as a string. This should be a decimal number (e.g. "1.5" or "100"). The amount will be automatically adjusted based on the token\'s decimals.
 */
export interface JupiterSwapLitActionParameters {
    pkpEthAddress: string;
    tokenIn: string;
    tokenOut: string;
    amountIn: string;
}
/**
 * Exports network-specific JupiterSwap tools.
 * Each tool is configured for a specific Lit network (e.g., `datil-dev`, `datil-test`, `datil`).
 */
export declare const JupiterSwap: Record<SupportedLitNetwork, AwTool<JupiterSwapLitActionParameters, {
    version: string;
    type: "JupiterSwap";
    maxAmount: string;
    allowedTokens: string[];
}>>;
//# sourceMappingURL=tool.d.ts.map