"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSolanaKeypair = createSolanaKeypair;
const web3_js_1 = require("@solana/web3.js");
const aw_tool_1 = require("@lit-protocol/aw-tool");
async function createSolanaKeypair(pkpTokenId) {
    const accessControlConditions = (0, aw_tool_1.getAccessControlConditions)(pkpTokenId, LIT_NETWORK);
    const decryptedPrivateKey = await Lit.Actions.decryptAndCombine({
        accessControlConditions: accessControlConditions,
        ciphertext: params.ciphertext,
        dataToEncryptHash: params.dataToEncryptHash,
        authSig: null,
        chain: "yellowstone",
    });
    function base64ToUint8Array(base64) {
        const binaryString = atob(base64);
        const len = binaryString.length;
        const bytes = new Uint8Array(len);
        for (let i = 0; i < len; i++) {
            bytes[i] = binaryString.charCodeAt(i);
        }
        return bytes;
    }
    const secretKeyUint8Array = base64ToUint8Array(decryptedPrivateKey);
    return web3_js_1.Keypair.fromSecretKey(secretKeyUint8Array);
}
