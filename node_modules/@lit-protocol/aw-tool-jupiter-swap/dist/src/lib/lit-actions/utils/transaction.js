"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.signAndSendTransaction = signAndSendTransaction;
async function signAndSendTransaction(connection, transaction) {
    console.log('Starting transaction send process...');
    const latestBlockHash = await connection.getLatestBlockhash('confirmed');
    if (!latestBlockHash) {
        throw new Error('Failed to get recent blockhash');
    }
    console.log('Got latest blockhash:', latestBlockHash.blockhash);
    console.log('Entering runOnce for transaction sending...');
    const txid = await Lit.Actions.runOnce({ waitForResponse: true, name: 'txnSender' }, async () => {
        console.log('Inside runOnce: preparing to send transaction...');
        try {
            const rawTransaction = transaction.serialize();
            console.log('Transaction serialized, sending to network...');
            const signature = await connection.sendRawTransaction(rawTransaction, {
                skipPreflight: true,
                maxRetries: 3,
                preflightCommitment: 'confirmed'
            });
            if (!signature) {
                throw new Error('Failed to send transaction');
            }
            console.log('Inside runOnce: Transaction sent successfully:', signature);
            return signature;
        }
        catch (error) {
            console.error('Inside runOnce: Error broadcasting transaction:', error);
            throw error;
        }
    });
    console.log('Exited runOnce, transaction sent with ID:', txid);
    return txid;
}
