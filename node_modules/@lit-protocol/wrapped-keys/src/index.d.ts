import { signMessageWithEncryptedKey, getEncryptedKey, exportPrivateKey, generatePrivateKey, importPrivateKey, signTransactionWithEncryptedKey, storeEncryptedKey, listEncryptedKeyMetadata, batchGeneratePrivateKeys, storeEncryptedKeyBatch } from './lib/api';
import { setLitActionsCode, setLitActionsCodeCommon } from './lib/lit-actions-client/code-repository';
import { LitActionCodeRepository, LitActionCodeRepositoryCommon, LitActionCodeRepositoryEntry } from './lib/lit-actions-client/types';
import type { SupportedNetworks } from './lib/service-client/types';
import type { SignMessageWithEncryptedKeyParams, GetEncryptedKeyDataParams, ExportPrivateKeyParams, GeneratePrivateKeyParams, ImportPrivateKeyParams, SignTransactionWithEncryptedKeyParams, ExportPrivateKeyResult, GeneratePrivateKeyResult, EthereumLitTransaction, SerializedTransaction, BaseApiParams, ApiParamsSupportedNetworks, SignTransactionParams, SignTransactionParamsSupportedEvm, SignTransactionParamsSupportedSolana, StoreEncryptedKeyParams, StoreEncryptedKeyBatchParams, StoredKeyData, StoredKeyMetadata, ListEncryptedKeyMetadataParams, StoreEncryptedKeyResult, ImportPrivateKeyResult, StoreEncryptedKeyBatchResult } from './lib/types';
export declare const constants: {
    CHAIN_ETHEREUM: "ethereum";
    LIT_PREFIX: "lit_";
    NETWORK_EVM: import("./lib/types").Network;
    NETWORK_SOLANA: import("./lib/types").Network;
    KEYTYPE_K256: import("./lib/types").KeyType;
    KEYTYPE_ED25519: import("./lib/types").KeyType;
};
export declare const api: {
    exportPrivateKey: typeof exportPrivateKey;
    generatePrivateKey: typeof generatePrivateKey;
    getEncryptedKey: typeof getEncryptedKey;
    listEncryptedKeyMetadata: typeof listEncryptedKeyMetadata;
    importPrivateKey: typeof importPrivateKey;
    signMessageWithEncryptedKey: typeof signMessageWithEncryptedKey;
    signTransactionWithEncryptedKey: typeof signTransactionWithEncryptedKey;
    storeEncryptedKey: typeof storeEncryptedKey;
    storeEncryptedKeyBatch: typeof storeEncryptedKeyBatch;
    batchGeneratePrivateKeys: typeof batchGeneratePrivateKeys;
};
export declare const config: {
    setLitActionsCode: typeof setLitActionsCode;
    setLitActionsCodeCommon: typeof setLitActionsCodeCommon;
};
export { ApiParamsSupportedNetworks, BaseApiParams, EthereumLitTransaction, ExportPrivateKeyParams, ExportPrivateKeyResult, GetEncryptedKeyDataParams, GeneratePrivateKeyParams, GeneratePrivateKeyResult, ImportPrivateKeyParams, ImportPrivateKeyResult, ListEncryptedKeyMetadataParams, LitActionCodeRepository, LitActionCodeRepositoryCommon, LitActionCodeRepositoryEntry, SerializedTransaction, SignTransactionParams, SignTransactionParamsSupportedEvm, SignTransactionParamsSupportedSolana, SignMessageWithEncryptedKeyParams, SignTransactionWithEncryptedKeyParams, StoreEncryptedKeyParams, StoreEncryptedKeyResult, StoreEncryptedKeyBatchParams, StoreEncryptedKeyBatchResult, StoredKeyData, StoredKeyMetadata, SupportedNetworks, };
