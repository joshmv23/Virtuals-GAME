"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.signTransactionWithLitAction = signTransactionWithLitAction;
const constants_1 = require("@lit-protocol/constants");
const utils_1 = require("./utils");
async function signTransactionWithLitAction({ accessControlConditions, broadcast, litActionIpfsCid, litActionCode, litNodeClient, pkpSessionSigs, storedKeyMetadata: { ciphertext, dataToEncryptHash, pkpAddress }, unsignedTransaction, versionedTransaction, }) {
    const result = await litNodeClient.executeJs({
        sessionSigs: pkpSessionSigs,
        ipfsId: litActionIpfsCid,
        code: litActionCode,
        jsParams: {
            pkpAddress,
            ciphertext,
            dataToEncryptHash,
            unsignedTransaction,
            broadcast,
            accessControlConditions,
            versionedTransaction,
        },
        ipfsOptions: {
            overwriteCode: constants_1.GLOBAL_OVERWRITE_IPFS_CODE_BY_NETWORK[litNodeClient.config.litNetwork],
        },
    });
    return (0, utils_1.postLitActionValidation)(result);
}
//# sourceMappingURL=sign-transaction.js.map