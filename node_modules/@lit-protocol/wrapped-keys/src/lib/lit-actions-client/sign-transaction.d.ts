import { AccessControlConditions, ILitNodeClient, SessionSigsMap } from '@lit-protocol/types';
import { EthereumLitTransaction, SerializedTransaction, StoredKeyData } from '../types';
interface SignTransactionWithLitActionParams {
    litNodeClient: ILitNodeClient;
    pkpSessionSigs: SessionSigsMap;
    litActionIpfsCid?: string;
    litActionCode?: string;
    unsignedTransaction: EthereumLitTransaction | SerializedTransaction;
    storedKeyMetadata: StoredKeyData;
    accessControlConditions: AccessControlConditions;
    broadcast: boolean;
    versionedTransaction?: boolean;
}
export declare function signTransactionWithLitAction({ accessControlConditions, broadcast, litActionIpfsCid, litActionCode, litNodeClient, pkpSessionSigs, storedKeyMetadata: { ciphertext, dataToEncryptHash, pkpAddress }, unsignedTransaction, versionedTransaction, }: SignTransactionWithLitActionParams): Promise<string>;
export {};
