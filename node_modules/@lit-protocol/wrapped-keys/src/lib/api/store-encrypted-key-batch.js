"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.storeEncryptedKeyBatch = storeEncryptedKeyBatch;
const utils_1 = require("./utils");
const service_client_1 = require("../service-client");
/** Stores a batch of encrypted private keys and their metadata to the wrapped keys backend service
 *
 * @param { StoreEncryptedKeyParams } params Parameters required to fetch the encrypted private key metadata
 * @returns { Promise<StoreEncryptedKeyResult> } The encrypted private key and its associated metadata
 */
async function storeEncryptedKeyBatch(params) {
    const { pkpSessionSigs, litNodeClient, keyBatch } = params;
    const sessionSig = (0, utils_1.getFirstSessionSig)(pkpSessionSigs);
    const pkpAddress = (0, utils_1.getPkpAddressFromSessionSig)(sessionSig);
    const storedKeyMetadataBatch = keyBatch.map(({ keyType, publicKey, memo, dataToEncryptHash, ciphertext, }) => ({
        pkpAddress,
        publicKey,
        memo,
        dataToEncryptHash,
        ciphertext,
        keyType,
    }));
    return (0, service_client_1.storePrivateKeyBatch)({
        storedKeyMetadataBatch,
        sessionSig,
        litNetwork: litNodeClient.config.litNetwork,
    });
}
//# sourceMappingURL=store-encrypted-key-batch.js.map