"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEncryptedKey = getEncryptedKey;
const utils_1 = require("./utils");
const service_client_1 = require("../service-client");
/** Get a previously encrypted and persisted private key and its metadata.
 * Note that this method does _not_ decrypt the private key; only the _encrypted_ key and its metadata will be returned to the caller.
 *
 * @param { GetEncryptedKeyDataParams } params Parameters required to fetch the encrypted private key metadata
 * @returns { Promise<StoredKeyData> } The encrypted private key and its associated metadata
 */
async function getEncryptedKey(params) {
    const { pkpSessionSigs, litNodeClient, id } = params;
    const sessionSig = (0, utils_1.getFirstSessionSig)(pkpSessionSigs);
    const pkpAddress = (0, utils_1.getPkpAddressFromSessionSig)(sessionSig);
    return (0, service_client_1.fetchPrivateKey)({
        pkpAddress,
        id,
        sessionSig,
        litNetwork: litNodeClient.config.litNetwork,
    });
}
//# sourceMappingURL=get-encrypted-key.js.map