"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getToolForIntent = getToolForIntent;
// Import a helper function to generate a prompt for tool matching.
const get_tool_matching_prompt_1 = require("./get-tool-matching-prompt");
/**
 * Matches a user's intent to an appropriate tool from the available tools on a specified Lit network.
 * This function uses OpenAI's API to analyze the intent and recommend a tool.
 *
 * @param openai - An instance of the OpenAI client.
 * @param openAiModel - The name of the OpenAI model to use for analysis.
 * @param userIntent - The user's intent as a string (e.g., "I want to mint an NFT").
 * @param litNetwork - The Lit network to use for filtering available tools.
 * @returns A Promise that resolves to an object containing:
 *   - analysis: The raw analysis result from OpenAI, parsed as a JSON object.
 *   - matchedTool: The tool matched to the user's intent, or `null` if no match is found.
 */
async function getToolForIntent(openai, openAiModel, userIntent, registeredTools) {
    const completion = await openai.chat.completions.create({
        model: openAiModel,
        messages: [
            {
                role: 'system',
                content: (0, get_tool_matching_prompt_1.getToolMatchingPrompt)(registeredTools),
            },
            {
                role: 'user',
                content: userIntent, // Provide the user's intent as input.
            },
        ],
        response_format: { type: 'json_object' }, // Request the response in JSON format.
    });
    // Parse the analysis result from OpenAI's response.
    const analysis = JSON.parse(completion.choices[0].message.content || '{}');
    // Find the matched tool based on the recommended CID from the analysis.
    const matchedTool = analysis.recommendedCID
        ? registeredTools.find((tool) => tool.ipfsCid === analysis.recommendedCID) || null
        : null;
    // Return the analysis and the matched tool (or null if no match is found).
    return { analysis, matchedTool };
}
