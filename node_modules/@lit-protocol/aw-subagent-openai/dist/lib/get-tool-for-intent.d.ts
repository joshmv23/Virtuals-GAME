import { OpenAI } from 'openai';
import type { AwTool } from '@lit-protocol/aw-tool';
/**
 * Matches a user's intent to an appropriate tool from the available tools on a specified Lit network.
 * This function uses OpenAI's API to analyze the intent and recommend a tool.
 *
 * @param openai - An instance of the OpenAI client.
 * @param openAiModel - The name of the OpenAI model to use for analysis.
 * @param userIntent - The user's intent as a string (e.g., "I want to mint an NFT").
 * @param litNetwork - The Lit network to use for filtering available tools.
 * @returns A Promise that resolves to an object containing:
 *   - analysis: The raw analysis result from OpenAI, parsed as a JSON object.
 *   - matchedTool: The tool matched to the user's intent, or `null` if no match is found.
 */
export declare function getToolForIntent(openai: OpenAI, openAiModel: string, userIntent: string, registeredTools: AwTool<any, any>[]): Promise<{
    analysis: any;
    matchedTool: AwTool | null;
}>;
//# sourceMappingURL=get-tool-for-intent.d.ts.map