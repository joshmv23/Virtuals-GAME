import { type LitNodeClientNodeJs } from '@lit-protocol/lit-node-client-nodejs';
import type { SessionSigsMap } from '@lit-protocol/types';
import { StoredKeyData } from "@lit-protocol/wrapped-keys";
import type { LocalStorage } from './utils/storage';
export declare function loadWrappedKeyFromStorage(storage: LocalStorage, id: string): StoredKeyData | null;
export declare function saveWrappedKeyToStorage(storage: LocalStorage, wrappedKey: StoredKeyData): void;
export declare function loadWrappedKeysFromStorage(storage: LocalStorage): StoredKeyData[];
export declare function mintWrappedKey(litNodeClient: LitNodeClientNodeJs, pkpSessionSigs: SessionSigsMap, pkpTokenId: string, litNetwork: 'datil-dev' | 'datil-test' | 'datil', storage: LocalStorage): Promise<StoredKeyData>;
export declare function removeWrappedKeyFromStorage(storage: LocalStorage, id: string): void;
//# sourceMappingURL=wrapped-key.d.ts.map