import { ethers } from 'ethers';
/**
 * Configuration for the Tool Policy Registry contract.
 * Includes the RPC URL and contract address for interacting with the registry.
 */
export interface ToolRegistryConfig {
    /** The RPC URL for the blockchain network. */
    rpcUrl: string;
    /** The address of the Tool Policy Registry contract. */
    contractAddress: string;
}
export declare const DEFAULT_REGISTRY_CONFIG: Record<string, ToolRegistryConfig>;
/**
 * Creates a new instance of the PKP Tool Registry contract.
 * @param config - The configuration for the Tool Policy Registry contract, includes the RPC URL and contract address.
 * @param signer - An optional ethers.Signer instance for write operations.
 * @returns A new instance of the PKP Tool Registry contract.
 */
export declare const getPkpToolRegistryContract: ({ rpcUrl, contractAddress }: ToolRegistryConfig, signer?: ethers.Signer) => ethers.Contract;
//# sourceMappingURL=pkp-tool-registry-contract.d.ts.map