"use strict";
// Modified code of https://github.com/vercel/react-tweet
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTweet = getTweet;
const fetch_tweet_1 = require("./fetch-tweet");
/**
 * Returns a tweet from the Twitter syndication API.
 */
function getTweet(id, fetchOptions) {
    return __awaiter(this, void 0, void 0, function* () {
        const { data, tombstone, notFound } = yield (0, fetch_tweet_1.fetchTweet)(id, fetchOptions);
        if (notFound) {
            console.error(`The tweet ${id} does not exist or has been deleted by the account owner. Update your code to remove this tweet when possible.`);
        }
        else if (tombstone) {
            console.error(`The tweet ${id} has been made private by the account owner. Update your code to remove this tweet when possible.`);
        }
        return data;
    });
}
